{"ast":null,"code":"var _jsxFileName = \"/Users/skarri/Downloads/portfolio-main/src/containers/projects/Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, Suspense, lazy } from \"react\";\nimport \"./Project.scss\";\nimport Button from \"../../components/button/Button\";\nimport { socialMediaLinks } from \"../../portfolio\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport Loading from \"../../containers/loading/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GithubRepoCard = /*#__PURE__*/lazy(_c = () => import(\"../../components/githubRepoCard/GithubRepoCard\"));\n_c2 = GithubRepoCard;\nconst FailedLoading = () => null;\n_c3 = FailedLoading;\nconst renderLoader = () => /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 28\n}, this);\nexport default function Projects() {\n  _s();\n  const [repo, setrepo] = useState([]);\n  const {\n    isDark\n  } = useContext(StyleContext); // TODO: remove if unused\n\n  useEffect(() => {\n    const getRepoData = () => {\n      fetch(\"/profile.json\").then(result => {\n        if (result.ok) return result.json();\n        throw result;\n      }).then(response => {\n        setrepoFunction(response.data.user.pinnedItems.edges);\n      }).catch(error => {\n        console.error(`${error} (because of this error, nothing is shown in place of Projects section. Also check if Projects section has been configured)`);\n        setrepoFunction(\"Error\");\n      });\n    };\n    getRepoData();\n  }, []);\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n  if (Array.isArray(repo)) {\n    return /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: renderLoader(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        id: \"opensource\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"project-title\",\n          children: \"Open Source Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"repo-cards-div-main\",\n          children: repo.map((v, i) => {\n            if (!v) {\n              console.error(`Github Object for repository number : ${i} is undefined`);\n            }\n            return /*#__PURE__*/_jsxDEV(GithubRepoCard, {\n              repo: v,\n              isDark: isDark\n            }, v.node.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"More Projects\",\n          className: \"project-button\",\n          href: socialMediaLinks.github,\n          newTab: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(FailedLoading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n}\n_s(Projects, \"w7h9C+mMgCDxw9bJ/KLG4ecHjmY=\");\n_c4 = Projects;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"GithubRepoCard$lazy\");\n$RefreshReg$(_c2, \"GithubRepoCard\");\n$RefreshReg$(_c3, \"FailedLoading\");\n$RefreshReg$(_c4, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Suspense","lazy","Button","socialMediaLinks","StyleContext","Loading","jsxDEV","_jsxDEV","GithubRepoCard","_c","_c2","FailedLoading","_c3","renderLoader","fileName","_jsxFileName","lineNumber","columnNumber","Projects","_s","repo","setrepo","isDark","getRepoData","fetch","then","result","ok","json","response","setrepoFunction","data","user","pinnedItems","edges","catch","error","console","array","Array","isArray","fallback","children","className","id","map","v","i","node","text","href","github","newTab","_c4","$RefreshReg$"],"sources":["/Users/skarri/Downloads/portfolio-main/src/containers/projects/Projects.js"],"sourcesContent":["import React, { useState, useEffect, useContext, Suspense, lazy } from \"react\";\nimport \"./Project.scss\";\nimport Button from \"../../components/button/Button\";\nimport { socialMediaLinks } from \"../../portfolio\";\nimport StyleContext from \"../../contexts/StyleContext\";\nimport Loading from \"../../containers/loading/Loading\";\n\nconst GithubRepoCard = lazy(() =>\n  import(\"../../components/githubRepoCard/GithubRepoCard\")\n);\nconst FailedLoading = () => null;\nconst renderLoader = () => <Loading />;\n\nexport default function Projects() {\n  const [repo, setrepo] = useState([]);\n  const { isDark } = useContext(StyleContext); // TODO: remove if unused\n\n  useEffect(() => {\n    const getRepoData = () => {\n      fetch(\"/profile.json\")\n        .then((result) => {\n          if (result.ok) return result.json();\n          throw result;\n        })\n        .then((response) => {\n          setrepoFunction(response.data.user.pinnedItems.edges);\n        })\n        .catch((error) => {\n          console.error(\n            `${error} (because of this error, nothing is shown in place of Projects section. Also check if Projects section has been configured)`\n          );\n          setrepoFunction(\"Error\");\n        });\n    };\n    getRepoData();\n  }, []);\n\n  function setrepoFunction(array) {\n    setrepo(array);\n  }\n\n  if (Array.isArray(repo)) {\n    return (\n      <Suspense fallback={renderLoader()}>\n        <div className=\"main\" id=\"opensource\">\n          <h1 className=\"project-title\">Open Source Projects</h1>\n          <div className=\"repo-cards-div-main\">\n            {repo.map((v, i) => {\n              if (!v) {\n                console.error(\n                  `Github Object for repository number : ${i} is undefined`\n                );\n              }\n              return (\n                <GithubRepoCard repo={v} key={v.node.id} isDark={isDark} />\n              );\n            })}\n          </div>\n          <Button\n            text={\"More Projects\"}\n            className=\"project-button\"\n            href={socialMediaLinks.github}\n            newTab={true}\n          />\n        </div>\n      </Suspense>\n    );\n  } else {\n    return <FailedLoading />;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}